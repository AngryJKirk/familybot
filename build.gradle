buildscript {
    ext {
        kotlinVersion = '1.3.60'
        springBootVersion = '1.5.9.RELEASE'
        telegramBotVersion = '4.4.0.1'
        ktlintVersion = '9.1.0'
        coroutinesVersion = '1.3.2'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "org.jlleitschuh.gradle:ktlint-gradle:${ktlintVersion}"
    }
}
repositories {
    mavenCentral()
}
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: "org.jlleitschuh.gradle.ktlint"

group = 'space.yaroslav'
version = '1.0'
sourceCompatibility = 1.8

dependencies {
    compile group: 'com.google.guava', name: 'guava', version: '23.5-jre'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.5'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: "${springBootVersion}"
    compile "org.springframework.boot:spring-boot-configuration-processor"
    compile group: 'org.telegram', name: 'telegrambots', version: "${telegramBotVersion}"
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile "org.testcontainers:testcontainers:1.11.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutinesVersion}"
}

bootRun {
    jvmArgs = ["-Xmx1024m",
               "-Dcom.sun.management.jmxremote",
               "-Djava.rmi.server.hostname=yaroslav.space",
               "-Dcom.sun.management.jmxremote.local.only=false",
               "-Dcom.sun.management.jmxremote.rmi.port=8085",
               "-Dcom.sun.management.jmxremote.port=8085",
               "-Dcom.sun.management.jmxremote.authenticate=false",
               "-Dcom.sun.management.jmxremote.ssl=false"
    ]
}
kotlin {}
